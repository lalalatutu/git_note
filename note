  
  自己在文件夹里创建txt文件，然后使用add来告诉git库添加了什么
  git add readme . txt
  把readme . txt添加到库
  git comit告诉Git, 把文件提交到仓库可以一次添加多个，然后一次性提交 git commit -m“修改了什么内容的解释”最好加上，方便理解上次提交了什么
  git status来查看状态
  git diff查看与上次相比修改了什么
  git 1og --pretty = oneline是查看历史操作记录后边的--pretty = oneline是为了美化，仅仅显示- -行
  commit 6ba12529e3bbbf94d2f488932c222fe3949bd349 (HEAD  - > master)那一大串是commit_id
  
  用HEAD表示当前版本，上一个版本就是HEAD ^，上上一 个版本就是HEAD An,
  10  当然往上100个版本写100个^比较容易数不过来，所以写成HEAD~100           git reset --hard HEAD ^ ---会上个版本
  使用git reset --hard 加commitid前几位就可以回到指定commit_id的版本

---暂存区和工作区
GitHub存在一个工作区和缓存区，使用add只是添加到了暂存区，所以可以多次add，之后统一使用commit来提交

改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file  
git checkout其实是用版本库里的版本替换工作区的版本，无论工作区是修改还是删除，都可以“一键还原”
当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD <file>，就回到了场景1，第二步按场景1操作

删除
rm 文件名   确实要从版本库中删除该文件，那就用命令git rm删掉，并且git commit


查看分支：git branch

创建分支：git branch <name>

切换分支：git checkout <name>

创建+切换分支：git checkout -b <name>

合并某分支到当前分支：git merge <name>

删除分支：git branch -d <name>
